{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","displayName","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","props","messageClass","src","alt","size","color","App","useAuthState","user","ReactDOM","render","document","getElementById"],"mappings":"kTAcAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAIT,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,YA0B3B,SAASC,IAOP,OACE,mCACE,wBAAQC,UAAU,UAAUC,QAPP,WACvB,IAAMC,EAAW,IAAIb,IAASQ,KAAKM,mBACnCN,EAAKO,gBAAgBF,IAKnB,mCAMN,SAASG,IACP,OAAOR,EAAKS,aACV,wBAAQN,UAAU,WAAWC,QAAS,kBAAMJ,EAAKU,WAAjD,SAA4D,cAAC,IAAD,MAKhE,SAASC,IACP,IAAMC,EAAQC,mBACRC,EAAcb,EAAUc,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,KAErD,EAAmBC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EAAP,oBAEA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAGMC,EAAW,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGqB5B,EAAKS,YAApCoB,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAAUC,EAHL,EAGKA,YAHL,SAKZjB,EAAYkB,IAAI,CACpBC,KAAMV,EACNW,UAAW1C,IAASS,UAAUkC,WAAWC,kBACzCP,MACAC,WACAC,gBAVgB,OAalBP,EAAa,IACbZ,EAAMyB,QAAQC,eAAe,CAAEC,SAAU,WAdvB,2CAAH,sDAiBjB,OAAQ,qCACN,iCAEGlB,GAAYA,EAASmB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAEvD,sBAAMC,IAAKjC,OAIb,uBAAMkC,SAAUrB,EAAhB,UAEE,uBAAOsB,MAAOxB,EAAWyB,SAAU,SAACtB,GAAD,OAAOF,EAAaE,EAAEuB,OAAOF,QAAQG,YAAY,eAEpF,wBAAQC,KAAK,SAASC,UAAW7B,EAAWpB,UAAU,UAAtD,SAAgE,cAAC,IAAD,YAOtE,SAASuC,EAAYW,GAAQ,IAAD,EAC1B,EAA4CA,EAAMV,QAA1CV,EAAR,EAAQA,KAAMJ,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,YAEvBuB,EAAezB,IAAQ7B,EAAKS,YAAYoB,IAAM,OAAS,WAE7D,OAAQ,mCACN,sBAAK1B,UAAS,kBAAamD,GAA3B,UACE,qBAAKC,IAAKzB,GAAY,wDAAyD0B,IAAI,KACnF,8BAAIvB,EAAK,+BAAM,yBAAMwB,KAAK,IAAIC,MAAM,SAASvD,UAAU,YAAxC,4CAAyEmD,IAAzE,yBAA0FvB,GAA1F,cAON4B,MA3Gf,WAEE,MAAeC,YAAa5D,GAArB6D,EAAP,oBAMA,OACE,sBAAK1D,UAAU,MAAf,UACE,mCACE,oBAAIC,QARe,WACvB,IAAMC,EAAW,IAAIb,IAASQ,KAAKM,mBACnCN,EAAKO,gBAAgBF,IAMjB,SAAgC,uBAAMqD,MAAM,SAAZ,oBAA4B,cAAC,IAAD,CAA2BD,KAAK,eAC5F,cAACjD,EAAD,OAGF,kCACGqD,EAAO,cAAClD,EAAD,IAAe,cAACT,EAAD,UCxC/B4D,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.29daf0b9.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport QuestionAnswerRoundedIcon from '@material-ui/icons/QuestionAnswerRounded';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBOdfX_-WBub3AIHChW_Qh9aK6J0bLsung\",\n  authDomain: \"chatbud-80653.firebaseapp.com\",\n  projectId: \"chatbud-80653\",\n  storageBucket: \"chatbud-80653.appspot.com\",\n  messagingSenderId: \"319960267783\",\n  appId: \"1:319960267783:web:d59f1e81f4975140803ea2\"\n})\n\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1 onClick={signInWithGoogle} ><font color=\"d13681\">Chatbud<QuestionAnswerRoundedIcon size=\"large\"/></font></h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}><ExitToAppTwoToneIcon /></button>\n  )\n}\n\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(250);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL, displayName } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      displayName\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Message...\" />\n\n      <button type=\"submit\" disabled={!formValue} className=\"sendbtn\"><TelegramIcon /></button>\n\n    </form>\n  </>)\n}\n\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL, displayName} = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} alt=\"\" />\n      <p>{text}<span><font size='1' color=\"d13681\" className=\"username\" className={`message ${messageClass}`}>{displayName}</font></span></p>\n    </div>\n    \n  </>)\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}